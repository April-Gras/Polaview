version: "3.9"

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile.server
      target: dev_build
    networks:
      - polaview.network
    ports:
      - 8080:8080
    restart: unless-stopped
    tty: true
    command: npm run server-dev
    depends_on:
      - postgres
    volumes:
      - ./server:/api/server
      - ./shared:/api/shared
      - /home/${USER}/Videos:/openMedia
      - ./node_modules:/api/node_modules
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - count: 1
    #           capabilities: [gpu]
    #           # driver: nvidia

  client:
    build:
      context: .
      dockerfile: Dockerfile.client
      target: dev_build
    networks:
      - polaview.network
    ports:
      - 5173:5173
      - 3010:3010
    restart: unless-stopped
    tty: true
    command: npm run client-dev
    volumes:
      - ./src:/client/src
      - ./shared:/client/shared
      - ./node_modules:/client/node_modules

  nginx:
    image: nginx
    build:
      context: ./nginx
    ports:
      - 0.0.0.0:80:80
    volumes:
      - .:/var/www/
    restart: unless-stopped
    networks:
      - polaview.network
    depends_on:
      - scraper
      - client
      - server

  scraper:
    image: scraper
    build:
      context: .
      dockerfile: Dockerfile.scraper
      target: dev_build
    networks:
      - polaview.network
    ports:
      - 8081:8081
    restart: unless-stopped
    command: npm run scraper-dev
    volumes:
      - ./scraper:/scraper/scraper
      - ./shared:/scraper/shared
      - ./node_modules:/scraper/node_modules

  postgres:
    container_name: pg_container
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=polaview
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - polaview.network

networks:
  polaview.network:
    driver: bridge

volumes:
  db:
    driver: local
