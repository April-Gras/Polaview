generator client {
  provider = "prisma-client-js"
}

datasource db {
  url      = env("DATABASE_URL")
  provider = "postgres"
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  passwordHash String
  name         String
  isAdmin      Boolean   @default(false)
  isActive     Boolean   @default(false)
  sessions     Session[]
}

model Session {
  id         String   @id @unique @default(uuid())
  user       User     @relation(references: [id], fields: [userId])
  userId     Int
  lastAccess DateTime @default(now())
}

model ImdbSearch {
  imdbId              String           @id @unique
  name                String
  thumbnailUrl        String?
  ImdbSearchCache     ImdbSearchCache? @relation(fields: [imdbSearchCacheTerm], references: [term])
  imdbSearchCacheTerm String
}

// TODO Change all imdbIds to int and prepend the url code when needed
model ImdbSearchCache {
  term    String       @id @unique
  results ImdbSearch[]
}

model Title {
  imdbId      String        @id @unique
  name        String
  releaseYear Int?
  mediaType   String?
  pictureUrl  String?
  titleOnCast TitleOnCast[]
  Serie       Serie?        @relation(fields: [serieImdbId], references: [imdbId])
  serieImdbId String?
}

model Serie {
  imdbId   String  @id @unique
  episodes Title[]
  name     String
}

model Person {
  imdbId      String        @id @unique
  name        String
  pictureUrl  String?
  titleOnCast TitleOnCast[]
}

model TitleOnCast {
  title    Title  @relation(fields: [titleId], references: [imdbId])
  titleId  String
  person   Person @relation(fields: [personId], references: [imdbId])
  personId String

  @@id([titleId, personId])
}
